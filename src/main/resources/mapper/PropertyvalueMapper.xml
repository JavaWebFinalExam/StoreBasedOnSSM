<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.store.dao.PropertyvalueMapper" >
  <resultMap id="BaseResultMap" type="com.store.entity.Propertyvalue" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="productId" property="productid" jdbcType="INTEGER" />
    <result column="propertyId" property="propertyid" jdbcType="INTEGER" />
    <result column="value" property="value" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, productId, propertyId, value
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from propertyvalue
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from propertyvalue
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.store.entity.Propertyvalue" >
    insert into propertyvalue (id, productId, propertyId, value)
    values (#{id,jdbcType=INTEGER},
    #{productid,jdbcType=INTEGER},
    #{propertyid,jdbcType=INTEGER},
    #{value,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.store.entity.Propertyvalue" >
    insert into propertyvalue
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productid != null" >
        productId,
      </if>
      <if test="propertyid != null" >
        propertyId,
      </if>
      <if test="value != null" >
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="propertyid != null" >
        #{propertyid,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.store.entity.Propertyvalue" >
    update propertyvalue
    <set >
      <if test="productid != null" >
        productId = #{productid,jdbcType=INTEGER},
      </if>
      <if test="propertyid != null" >
        propertyId = #{propertyid,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.store.entity.Propertyvalue" >
    update propertyvalue
    set productId = #{productid,jdbcType=INTEGER},
      propertyId = #{propertyid,jdbcType=INTEGER},
      value = #{value,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--以下为后续添加内容-->
<!--插入数据-->
  <insert id="insertPropertyValue" parameterType="com.store.entity.Propertyvalue">
    insert into propertyvalue(productId, propertyId, value)
    values (#{productid,jdbcType=INTEGER},
    #{propertyid,jdbcType=INTEGER},
    #{value,jdbcType=VARCHAR})
  </insert>
  <select id="getValueByProductId" parameterType="int" resultType="Propertyvalue">
    select *
    from propertyvalue
    where productId=#{productId};

  </select>

</mapper>